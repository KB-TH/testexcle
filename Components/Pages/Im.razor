@page "/im"
@using testexcle.Services
@using testexcle.Models
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer

<h3>Import Excel</h3>

<InputFile OnChange="HandleFileSelected" accept=".xlsx" />

@if (importedProducts?.Count > 0)
{
    <h4>Imported Products:</h4>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ReceiptDate</th>
                <th>No</th>
                <th>MasterCode</th>
                <th>Secode</th>
                <th>TrackingNo</th>
                <th>WeightNo</th>
                <th>CodNo</th>
                <th>Note</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in importedProducts)
            {
                <tr>
                    <td>@product.ReceiptDate</td>
                    <td>@product.No</td>
                    <td>@product.MasterCode</td>
                    <td>@product.Secode</td>
                    <td>@product.TrackingNo</td>
                    <td>@product.WeightNo</td>
                    <td>@product.CodNo</td>
                    <td>@product.Note</td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-danger" @onclick="ClearProducts">Clear</button>
}
else
{
    <p>No products imported yet.</p>
}

@inject ExcelImportService ExcelImportService

@code {
    private List<Product> importedProducts = new();

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            try
            {
                using var stream = file.OpenReadStream(10 * 1024 * 1024); // max 10MB
                importedProducts = await ExcelImportService.ImportAsync(stream);
            }
            catch (Exception ex)
            {
                // Handle parsing or file errors here
                Console.WriteLine($"Import failed: {ex.Message}");
            }
        }
    }

    private void ClearProducts()
    {
        importedProducts.Clear();
    }
}
